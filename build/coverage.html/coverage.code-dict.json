{"/home/travis/build/npmtest/node-npmtest-react-animate/test.js":"/* istanbul instrument in package npmtest_react_animate */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-animate/lib.npmtest_react_animate.js":"/* istanbul instrument in package npmtest_react_animate */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_react_animate = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_react_animate = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-react-animate/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-react-animate && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_react_animate */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_react_animate\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_react_animate.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_react_animate.rollup.js'] =\n            local.assetsDict['/assets.npmtest_react_animate.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_react_animate.__dirname + '/lib.npmtest_react_animate.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-animate/node_modules/react-animate/src/index.jsx":"import raf from 'raf';\nimport tween from 'tween-interpolate';\nimport _ from 'lodash';\nconst __DEV__ = process.env.NODE_ENV === 'development';\nconst __BROWSER__ = (typeof window === 'object');\n\nfunction isMobile(userAgent) {\n  return (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i).test(userAgent);\n}\n\nfunction isGingerbread(userAgent) {\n  return (/Android 2\\.3\\.[3-7]/i).test(userAgent);\n}\n\n// Hardware acceleration trick constants\nconst transformProperties = ['WebkitTransform', 'MozTransform', 'MSTransform', 'OTransform', 'Transform'];\nconst transformHA = 'translateZ(0)';\n\n// Decide whether we should do the hardware accelaration trick\n// if we are not explicitly prevented from.\n// The trick will be enabled in mobile browsers which are not\n// Android Gingerbread.\nfunction shouldEnableHA() {\n  if(!__BROWSER__) {\n    return false;\n  }\n  const { userAgent } = navigator;\n  if(!userAgent) {\n    return false;\n  }\n  // is mobile but not gingerbread\n  return isMobile(userAgent) && !isGingerbread(userAgent);\n}\n\nfunction enableHA(styles) {\n  // for each 'transform' property, set/prepend 'translateZ(0)'\n  _.each(transformProperties, (property) => {\n    if(styles[property] === void 0) {\n      styles[property] = [transformHA, transformHA];\n    }\n    else {\n      const [from, to] = styles[property];\n      styles[property] = [`${transformHA} ${from}`, `${transformHA} ${to}`];\n    }\n  });\n}\n\nconst Animate = {\n  '@animations': Symbol('animations'),\n\n  '@abortAnimation': Symbol('abortAnimation'),\n\n  '@animate': Symbol('animate'),\n\n  '@getAnimatedStyle': Symbol('getAnimatedStyle'),\n\n  '@isAnimated': Symbol('isAnimated'),\n\n  animate(...args) {\n    if(__DEV__) {\n      this.should.not.be.exactly(Animate);\n    }\n    return this[Animate['@animate']](...args);\n  },\n\n  abortAnimation(...args) {\n    if(__DEV__) {\n      this.should.not.be.exactly(Animate);\n    }\n    return this[Animate['@abortAnimation']](...args);\n  },\n\n  getAnimatedStyle(...args) {\n    if(__DEV__) {\n      this.should.not.be.exactly(Animate);\n    }\n    return this[Animate['@getAnimatedStyle']](...args);\n  },\n\n  isAnimated(...args) {\n    if(__DEV__) {\n      this.should.not.be.exactly(Animate);\n    }\n    return this[Animate['@isAnimated']](...args);\n  },\n\n  DEFAULT_EASING: 'cubic-in-out',\n\n  extend: null,\n};\n\nfunction animatedStyleStateKey(name) {\n  return `Animate@${name}`;\n}\n\nAnimate.extend = (Component) => class extends Component {\n  constructor(props) {\n    super(props);\n    if(!_.isObject(this.state)) {\n      this.state = {};\n    }\n    this[Animate['@animations']] = {};\n  }\n\n  componentWillUnmount() {\n    if(super.componentWillUnmount) {\n      super.componentWillUnmount();\n    }\n    if(this[Animate['@animations']] !== null) {\n      _.each(this[Animate['@animations']], (animation, name) => Animate.abortAnimation.call(this, name, animation));\n    }\n  }\n\n  [Animate['@getAnimatedStyle']](name) {\n    if(__DEV__) {\n      name.should.be.a.String;\n    }\n    return this.state && this.state[animatedStyleStateKey(name)] || {};\n  }\n\n  [Animate['@isAnimated']](name) {\n    if(__DEV__) {\n      name.should.be.a.String;\n    }\n    return (this[Animate['@animations']][name] !== void 0);\n  }\n\n  [Animate['@abortAnimation']](name) {\n    if(__DEV__) {\n      name.should.be.a.String;\n    }\n    if(this[Animate['@animations']][name] !== void 0) {\n      const { easingFn, onAbort, nextTick, t, currentStyle } = this[Animate['@animations']][name];\n      raf.cancel(nextTick);\n      onAbort(currentStyle, t, easingFn(t));\n      // unregister the animation\n      delete this[Animate['@animations']][name];\n      return true;\n    }\n    // silently fail but returns false\n    return false;\n  }\n\n  [Animate['@animate']](name, fromStyle, toStyle, duration, opts = {}) {\n    const {\n      easing = Animate.DEFAULT_EASING,\n      onTick = () => void 0,\n      onAbort = () => void 0,\n      onComplete = () => void 0,\n      disableMobileHA = false,\n    } = opts;\n\n    if(__DEV__) {\n      name.should.be.a.String;\n      fromStyle.should.be.an.Object;\n      toStyle.should.be.an.Object;\n      duration.should.be.a.Number.which.is.above(0);\n      onTick.should.be.a.Function;\n      onAbort.should.be.a.Function;\n      onComplete.should.be.a.Function;\n    }\n    // if there is already an animation with this name, abort it\n    if(this[Animate['@animations']][name] !== void 0) {\n      Animate.abortAnimation.call(this, name);\n    }\n    // create the actual easing function using tween-interpolate (d3 smash)\n    const easingFn = _.isObject(easing) ? tween.ease.apply(tween, [easing.type, ...easing.arguments]) : tween.ease(easing);\n    // reformat the input: [property]: [from, to]\n    const styles = {};\n    // unless told otherwise below, the value is assumed constant\n    _.each(fromStyle, (value, property) =>\n      styles[property] = [value, value]\n    );\n    // if we dont have an initial value for each property, assume it is constant from the beginning\n    _.each(toStyle, (value, property) =>\n      styles[property] = styles[property] === void 0 ? [value, value] : [styles[property][0], value]\n    );\n    // get an interpolator for each property\n    const interpolators = _.mapValues(styles, ([from, to]) => tween.interpolate(from, to));\n    // pre-compute the final style (ignore [from])\n    const finalStyle = _.mapValues(styles, ([, to]) => to);\n\n    // do the hardware acceleration trick\n    if(!disableMobileHA && shouldEnableHA()) {\n      enableHA(transformProperties, styles);\n    }\n\n    const start = Date.now();\n    const stateKey = animatedStyleStateKey(name);\n\n    // the main ticker function\n    const tick = () => {\n      const now = Date.now();\n      // progress: starts at 0, ends at > 1\n      const t = (now - start) / duration;\n      // we are past the end\n      if(t > 1) {\n        this.setState({ [stateKey]: finalStyle });\n        onTick(finalStyle, 1, easingFn(1));\n        onComplete(finalStyle, t, easingFn(t));\n        // unregister the animation\n        delete this[Animate['@animations']][name];\n        return;\n        // the animation is not over yet\n      }\n      const currentStyle = _.mapValues(interpolators, (fn) => fn(easingFn(t)));\n      this.setState({ [stateKey]: currentStyle });\n      onTick(currentStyle, t, easingFn(t));\n      Object.assign(this[Animate['@animations']][name], { nextTick: raf(tick), t, currentStyle });\n    };\n\n    // register the animation\n    this[Animate['@animations']][name] = {\n      easingFn,\n      onAbort,\n      nextTick: raf(tick),\n      t: 0,\n      currentStyle: fromStyle,\n    };\n    return this;\n  }\n};\n\nexport default Animate;\n","/home/travis/build/npmtest/node-npmtest-react-animate/node_modules/react-animate/gulpfile.js":"require('babel/register')({\n  only: /\\.jsx$/,\n  optional: [\n    'runtime',\n    'es7.classProperties',\n    'es7.decorators',\n  ],\n});\n\nvar eslint = require('gulp-eslint');\nvar gulp = require('gulp');\nvar plumber = require('gulp-plumber');\nvar mocha = require('gulp-mocha');\n\nfunction lint() {\n  return gulp.src('src/**/*.jsx')\n    .pipe(plumber())\n    .pipe(eslint())\n    .pipe(eslint.format());\n}\n\nfunction test() {\n  return gulp.src('src/__tests__/**/*.jsx')\n    .pipe(mocha());\n}\n\ngulp.task('lint', lint);\ngulp.task('test', ['lint'], test);\ngulp.task('default', ['test']);\n"}